<?php

namespace Database\Seeders;

use App\Models\Instruction;
use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class InstructionSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
public function run(): void
{
    // Trick 1: Creating a responsive navbar pure HTML5, CSS3, and JS
    Instruction::create([
        'title_en' => 'HTML structure',
        'title_ar' => 'تركيبة HTML',
        'title_fr' => 'structure HTML',
        'description_en' => 'Basic structure with a <nav> element for navigation links and a <div> for the burger menu.',
        'description_ar' => 'الهيكل الأساسي مع عنصر <nav> لروابط التنقل و <div> لقائمة البرجر.',
        'description_fr' => 'Structure de base avec un élément <nav> pour les liens de navigation et un <div> pour le menu burger.',
        'code' => '<nav class="navbar">\n<ul class="nav-links">\n<li>Home</li>\n<li>Services</li>\n<li>About</li>\n<li>Contact</li>\n</ul>\n<div class="burger">\n<div class="line"></div>\n<div class="line"></div>\n<div class="line"></div>\n</div>\n</nav>',
        'language' => 'html',
        'premium' => false,
        'user_id' => 1,
        'trick_id' => 1,
    ]);
    Instruction::create([
        'title_en' => 'CSS styles',
        'title_ar' => 'واجهة CSS',
        'title_fr' => 'styles CSS',
        'description_en' => "✓ Uses Flexbox for layout.\n✓ Hides the menu on mobile and shows it with .nav-active.\n✓ Smooth transitions for a better user experience.",
        'description_ar' => "✓ يستخدم Flexbox للتصميم.\n✓ يخفي القائمة على الأجهزة المحمولة ويظهرها باستخدام .nav-active.\n✓ انتقالات سلسة لتجربة مستخدم أفضل.",
        'description_fr' => "✓ Utilise Flexbox pour la mise en page.\n✓ Masque le menu sur mobile et l'affiche avec .nav-active.\n✓ Transitions fluides pour une meilleure expérience utilisateur.",
        'code' => '/* Reset */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n/* Navbar */\n.navbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background: #333;\n    color: white;\n    padding: 15px 20px;\n    position: fixed;\n    width: 100%;\n    top: 0;\n    left: 0;\n    z-index: 1000;\n}\n\n/* Responsive */\n@media screen and (max-width: 768px) {\n    .nav-links {\n        display: none;\n    }\n    .burger {\n        display: block;\n    }\n}',
        'language' => 'css',
        'premium' => false,
        'user_id' => 1,
        'trick_id' => 1,
    ]);
    Instruction::create([
        'title_en' => 'JavaScript',
        'title_ar' => 'جافاسكريبت',
        'title_fr' => 'JavaScript',
        'description_en' => 'Adds/removes the .nav-active class when the burger menu is clicked.',
        'description_ar' => 'يضيف/يُزيل فئة .nav-active عندما يتم النقر على قائمة البرجر.',
        'description_fr' => 'Ajoute/supprime la classe .nav-active lorsque le menu burger est cliqué.',
        'code' => 'document.addEventListener("DOMContentLoaded", () => {\n    const burger = document.querySelector(".burger");\n    const nav = document.querySelector(".nav-links");\n\n    burger.addEventListener("click", () => {\n        nav.classList.toggle("nav-active");\n    });\n});',
        'language' => 'javascript',
        'premium' => false,
        'user_id' => 1,
        'trick_id' => 1,
    ]);

    // Trick 2: Setup Laravel Voyager
    Instruction::create([
        'title_en' => 'Install Laravel',
        'title_ar' => 'تثبيت لارافيل',
        'title_fr' => 'Installer Laravel',
        'description_en' => 'Set up a new Laravel 9 project with Composer.',
        'description_ar' => 'قم بإعداد مشروع جديد بلارافيل 9 باستخدام Composer.',
        'description_fr' => 'Installez un nouveau projet Laravel 9 avec Composer.',
        'code' => 'composer create-project --prefer-dist laravel/laravel:^9.0 name',
        'language' => 'bash',
        'premium' => false,
        'user_id' => 1,
        'trick_id' => 2,
    ]);
    Instruction::create([
        'title_en' => 'Add Voyager Package',
        'title_ar' => 'إضافة حزمة Voyager',
        'title_fr' => 'Ajouter le paquet Voyager',
        'description_en' => 'Install Voyager package for admin panel functionality.',
        'description_ar' => 'قم بتثبيت حزمة Voyager لوظائف لوحة التحكم.',
        'description_fr' => 'Installez le paquet Voyager pour les fonctionnalités du panneau d\'administration.',
        'code' => 'composer require tcg/voyager -W',
        'language' => 'bash',
        'premium' => false,
        'user_id' => 1,
        'trick_id' => 2,
    ]);
    Instruction::create([
        'title_en' => 'Configure .env',
        'title_ar' => 'إعداد ملف .env',
        'title_fr' => 'Configurer .env',
        'description_en' => 'Set application URL and database connection parameters.',
        'description_ar' => 'قم بضبط عنوان التطبيق وبارامترات اتصال قاعدة البيانات.',
        'description_fr' => 'Définissez l\'URL de l\'application et les paramètres de connexion à la base de données.',
        'code' => "APP_URL=http://localhost:8000\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=db_name\nDB_USERNAME=root\nDB_PASSWORD=",
        'language' => 'plaintext',
        'premium' => false,
        'user_id' => 1,
        'trick_id' => 2,
    ]);
    Instruction::create([
        'title_en' => 'Install Voyager with Dummy Data',
        'title_ar' => 'تثبيت Voyager مع بيانات تجريبية',
        'title_fr' => 'Installer Voyager avec des données fictives',
        'description_en' => 'Set up Voyager with sample data for testing.',
        'description_ar' => 'قم بإعداد Voyager مع بيانات تجريبية للاختبار.',
        'description_fr' => 'Installez Voyager avec des données fictives pour les tests.',
        'code' => 'php artisan voyager:install --with-dummy',
        'language' => 'bash',
        'premium' => false,
        'user_id' => 1,
        'trick_id' => 2,
    ]);

    // Trick 3: Vanilla JavaScript TODO Application with LocalStorage
    Instruction::create([
        'title_en' => 'SETUP Project',
        'title_ar' => 'إعداد المشروع',
        'title_fr' => 'Configuration du projet',
        'description_en' => "Create a folder named 'TODO Application'. Inside this folder, create the following three files:\n\t✔️index.html\n\t✔️style.css\n\t✔️script.js",
        'description_ar' => "إنشاء مجلد باسم 'TODO Application'. داخل هذا المجلد، إنشاء الملفات الثلاثة التالية:\n\t✔️index.html\n\t✔️style.css\n\t✔️script.js",
        'description_fr' => "Créez un dossier nommé 'TODO Application'. À l'intérieur de ce dossier, créez les trois fichiers suivants:\n\t✔️index.html\n\t✔️style.css\n\t✔️script.js",
        'code' => '',
        'language' => 'plaintext',
        'premium' => false,
        'user_id' => 1,
        'trick_id' => 3,
    ]);
    Instruction::create([
        'title_en' => 'HTML Structure',
        'title_ar' => 'تركيبة HTML',
        'title_fr' => 'structure HTML',
        'description_en' => 'Create the basic structure of the TODO application with an input field and a button.',
        'description_ar' => 'إنشاء الهيكل الأساسي لتطبيق TODO مع حقل إدخال وزر.',
        'description_fr' => 'Créer la structure de base de l\'application TODO avec un champ de saisie et un bouton.',
        'code' => '<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>TODO App</title>\n    <link rel="stylesheet" href="style.css">\n</head>\n<body>\n    <div class="todo-container">\n        <input type="text" id="taskInput" placeholder="Enter a task">\n        <button id="addTask">Add Task</button>\n        <ul id="taskList"></ul>\n    </div>\n    <script src="script.js"></script>\n</body>\n</html>',
        'language' => 'html',
        'premium' => false,
        'user_id' => 1,
        'trick_id' => 3,
    ]);
    Instruction::create([
        'title_en' => 'CSS Styling',
        'title_ar' => 'واجهة CSS',
        'title_fr' => 'styles CSS',
        'description_en' => 'Style the TODO application with a clean and modern design.',
        'description_ar' => 'تصميم تطبيق TODO بنمط نظيف ومعاصر.',
        'description_fr' => 'Styler l\'application TODO avec un design propre et moderne.',
        'code' => 'body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    margin: 0;\n    padding: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n}\n.todo-container {\n    background: #fff;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n#taskInput {\n    width: 100%;\n    padding: 10px;\n    margin-bottom: 10px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n}\n#addTask {\n    padding: 10px 20px;\n    background: #007bff;\n    color: #fff;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n}\n#addTask:hover {\n    background: #0056b3;\n}',
        'language' => 'css',
        'premium' => false,
        'user_id' => 1,
        'trick_id' => 3,
    ]);
    Instruction::create([
        'title_en' => 'JavaScript Functionality',
        'title_ar' => 'وظائف جافاسكريبت',
        'title_fr' => 'Fonctionnalités JavaScript',
        'description_en' => 'Add tasks dynamically and store them in LocalStorage.',
        'description_ar' => 'أضف المهام ديناميكيًا واحفظها في LocalStorage.',
        'description_fr' => 'Ajoutez des tâches dynamiquement et stockez-les dans LocalStorage.',
        'code' => 'document.addEventListener("DOMContentLoaded", () => {\n    const taskInput = document.getElementById("taskInput");\n    const addTaskButton = document.getElementById("addTask");\n    const taskList = document.getElementById("taskList");\n\n    // Load tasks from LocalStorage\n    const savedTasks = JSON.parse(localStorage.getItem("tasks")) || [];\n    savedTasks.forEach(task => addTaskToList(task));\n\n    addTaskButton.addEventListener("click", () => {\n        const taskText = taskInput.value.trim();\n        if (taskText !== "") {\n            addTaskToList(taskText);\n            saveTaskToLocalStorage(taskText);\n            taskInput.value = "";\n        }\n    });\n\n    function addTaskToList(taskText) {\n        const listItem = document.createElement("li");\n        listItem.textContent = taskText;\n        taskList.appendChild(listItem);\n    }\n\n    function saveTaskToLocalStorage(taskText) {\n        let tasks = JSON.parse(localStorage.getItem("tasks")) || [];\n        tasks.push(taskText);\n        localStorage.setItem("tasks", JSON.stringify(tasks));\n    }\n});',
        'language' => 'javascript',
        'premium' => false,
        'user_id' => 1,
        'trick_id' => 3,
    ]);

    // Trick 4: Simple CRUD operations with Laravel
Instruction::create([
    'title_en' => 'Set Up a New Laravel Project',
    'title_ar' => 'إعداد مشروع لارافيل جديد',
    'title_fr' => 'Configurer un nouveau projet Laravel',
    'description_en' => 'Create a new Laravel project using Composer.',
    'description_ar' => 'قم بإنشاء مشروع لارافيل جديد باستخدام Composer.',
    'description_fr' => 'Créez un nouveau projet Laravel avec Composer.',
    'code' => 'composer create-project --prefer-dist laravel/laravel:^9.0 project-name',
    'language' => 'bash',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 4,
]);
Instruction::create([
    'title_en' => 'Create a Database Table',
    'title_ar' => 'إنشاء جدول قاعدة بيانات',
    'title_fr' => 'Créer une table de base de données',
    'description_en' => 'Generate a migration file and define the structure of the "products" table.',
    'description_ar' => 'قم بإنشاء ملف الهجرة وتحديد هيكل جدول "المنتجات".',
    'description_fr' => 'Générez un fichier de migration et définissez la structure du tableau "produits".',
    'code' => 'php artisan make:migration create_products_table --create=products',
    'language' => 'bash',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 4,
]);
Instruction::create([
    'title_en' => 'Define Migration Fields',
    'title_ar' => 'تعريف حقول الهجرة',
    'title_fr' => 'Définir les champs de migration',
    'description_en' => 'Add fields like name, price, and description to the products table.',
    'description_ar' => 'أضف حقولًا مثل الاسم، السعر، والوصف إلى جدول المنتجات.',
    'description_fr' => 'Ajoutez des champs comme le nom, le prix et la description au tableau des produits.',
    'code' => '$table->id();\n$table->string("name");\n$table->decimal("price", 8, 2);\n$table->text("description")->nullable();\n$table->timestamps();',
    'language' => 'php',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 4,
]);
Instruction::create([
    'title_en' => 'Run the Migration',
    'title_ar' => 'تشغيل الهجرة',
    'title_fr' => 'Exécuter la migration',
    'description_en' => 'Apply the migration to create the "products" table in the database.',
    'description_ar' => 'قم بتطبيق الهجرة لإنشاء جدول "المنتجات" في قاعدة البيانات.',
    'description_fr' => 'Appliquez la migration pour créer le tableau "produits" dans la base de données.',
    'code' => 'php artisan migrate',
    'language' => 'bash',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 4,
]);
Instruction::create([
    'title_en' => 'Create a Model',
    'title_ar' => 'إنشاء نموذج',
    'title_fr' => 'Créer un modèle',
    'description_en' => 'Generate a Product model to interact with the "products" table.',
    'description_ar' => 'قم بإنشاء نموذج Product للتفاعل مع جدول "المنتجات".',
    'description_fr' => 'Générez un modèle Produit pour interagir avec le tableau "produits".',
    'code' => 'php artisan make:model Product',
    'language' => 'bash',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 4,
]);
Instruction::create([
    'title_en' => 'Build CRUD Controllers',
    'title_ar' => 'إنشاء متحكمين CRUD',
    'title_fr' => 'Créer des contrôleurs CRUD',
    'description_en' => 'Generate a controller with methods for Create, Read, Update, and Delete operations.',
    'description_ar' => 'قم بإنشاء متحكم مع طرق لإنشاء، قراءة، تحديث، وحذف العمليات.',
    'description_fr' => 'Générez un contrôleur avec des méthodes pour les opérations Créer, Lire, Mettre à jour et Supprimer.',
    'code' => 'php artisan make:controller ProductController --resource',
    'language' => 'bash',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 4,
]);
Instruction::create([
    'title_en' => 'Define Routes',
    'title_ar' => 'تحديد الروابط',
    'title_fr' => 'Définir les routes',
    'description_en' => 'Set up resourceful routes for the ProductController.',
    'description_ar' => 'قم بإعداد الروابط الموارد لـ ProductController.',
    'description_fr' => 'Configurez les routes ressources pour le ProductController.',
    'code' => 'Route::resource("products", ProductController::class);',
    'language' => 'php',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 4,
]);
Instruction::create([
    'title_en' => 'Build Blade Views',
    'title_ar' => 'إنشاء عروض Blade',
    'title_fr' => 'Créer des vues Blade',
    'description_en' => 'Create views for displaying, adding, editing, and deleting products.',
    'description_ar' => 'قم بإنشاء العروض لعرض، إضافة، تعديل، وحذف المنتجات.',
    'description_fr' => 'Créez des vues pour afficher, ajouter, modifier et supprimer des produits.',
    'code' => '@extends("layouts.app")\n\n@section("content")\n<h1>Products</h1>\n<ul>\n@foreach($products as $product)\n    <li>{{ $product->name }} - {{ $product->price }}</li>\n@endforeach\n</ul>\n@endsection',
    'language' => 'blade',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 4,
]);

// Trick 5: Building a dynamic form with React and Laravel API
Instruction::create([
    'title_en' => 'Set Up Laravel Backend',
    'title_ar' => 'إعداد الخلفية بلارافيل',
    'title_fr' => 'Configurer l\'API Laravel',
    'description_en' => 'Create a Laravel project and set up an API endpoint for handling form submissions.',
    'description_ar' => 'قم بإنشاء مشروع لارافيل وإعداد نقطة نهاية API لمعالجة إرسال النماذج.',
    'description_fr' => 'Créez un projet Laravel et configurez un point final API pour gérer les soumissions des formulaires.',
    'code' => 'composer create-project --prefer-dist laravel/laravel:^9.0 project-name',
    'language' => 'bash',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 5,
]);
Instruction::create([
    'title_en' => 'Create an API Route',
    'title_ar' => 'إنشاء رابط API',
    'title_fr' => 'Créer une route API',
    'description_en' => 'Define an API route to handle POST requests from the frontend.',
    'description_ar' => 'حدد رابط API لمعالجة طلبات POST من الجهة الأمامية.',
    'description_fr' => 'Définissez une route API pour gérer les requêtes POST depuis le frontend.',
    'code' => 'Route::post("/api/submit-form", [FormController::class, "store"]);',
    'language' => 'php',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 5,
]);
Instruction::create([
    'title_en' => 'Set Up React Frontend',
    'title_ar' => 'إعداد الجهة الأمامية برياكت',
    'title_fr' => 'Configurer le frontend React',
    'description_en' => 'Create a React app and install necessary dependencies.',
    'description_ar' => 'قم بإنشاء تطبيق React وتثبيت التبعيات اللازمة.',
    'description_fr' => 'Créez une application React et installez les dépendances nécessaires.',
    'code' => 'npx create-react-app my-app\nnpm install axios',
    'language' => 'bash',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 5,
]);
Instruction::create([
    'title_en' => 'Build the Form Component',
    'title_ar' => 'إنشاء مكون النموذج',
    'title_fr' => 'Créer le composant formulaire',
    'description_en' => 'Create a React component for the dynamic form.',
    'description_ar' => 'قم بإنشاء مكون React لنموذج ديناميكي.',
    'description_fr' => 'Créez un composant React pour le formulaire dynamique.',
    'code' => 'import React, { useState } from "react";\nimport axios from "axios";\n\nfunction App() {\n    const [formData, setFormData] = useState({ name: "", email: "" });\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        await axios.post("/api/submit-form", formData);\n        alert("Form submitted!");\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type="text" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} />\n            <input type="email" value={formData.email} onChange={(e) => setFormData({ ...formData, email: e.target.value })} />\n            <button type="submit">Submit</button>\n        </form>\n    );\n}\n\nexport default App;',
    'language' => 'javascript',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 5,
]);
Instruction::create([
    'title_en' => 'Test the Integration',
    'title_ar' => 'اختبار التكامل',
    'title_fr' => 'Tester l\'intégration',
    'description_en' => 'Run both the Laravel backend and React frontend to test the integration.',
    'description_ar' => 'قم بتشغيل الخلفية بلارافيل والجهة الأمامية برياكت لاختبار التكامل.',
    'description_fr' => 'Exécutez à la fois l\'API Laravel et le frontend React pour tester l\'intégration.',
    'code' => 'php artisan serve\nnpm start',
    'language' => 'bash',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 5,
]);

// Trick 6: Real-time chat application using WebSockets in Laravel
Instruction::create([
    'title_en' => 'Install Pusher',
    'title_ar' => 'تثبيت Pusher',
    'title_fr' => 'Installer Pusher',
    'description_en' => 'Set up Pusher for real-time communication.',
    'description_ar' => 'قم بتثبيت Pusher للتواصل الفوري.',
    'description_fr' => 'Installez Pusher pour la communication en temps réel.',
    'code' => 'composer require pusher/pusher-php-server',
    'language' => 'bash',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 6,
]);
Instruction::create([
    'title_en' => 'Configure .env for Pusher',
    'title_ar' => 'إعداد .env لـ Pusher',
    'title_fr' => 'Configurer .env pour Pusher',
    'description_en' => 'Add Pusher credentials to the .env file.',
    'description_ar' => 'أضف بيانات اعتماد Pusher إلى ملف .env.',
    'description_fr' => 'Ajoutez les identifiants Pusher au fichier .env.',
    'code' => 'PUSHER_APP_ID=your_app_id\nPUSHER_APP_KEY=your_app_key\nPUSHER_APP_SECRET=your_app_secret\nPUSHER_APP_CLUSTER=mt1',
    'language' => 'plaintext',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 6,
]);
Instruction::create([
    'title_en' => 'Set Up Broadcast Driver',
    'title_ar' => 'إعداد محرك البث',
    'title_fr' => 'Configurer le pilote de diffusion',
    'description_en' => 'Enable broadcasting in Laravel using Pusher.',
    'description_ar' => 'مكّن البث في لارافيل باستخدام Pusher.',
    'description_fr' => 'Activez la diffusion dans Laravel en utilisant Pusher.',
    'code' => 'BROADCAST_DRIVER=pusher',
    'language' => 'plaintext',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 6,
]);
Instruction::create([
    'title_en' => 'Create Event Class',
    'title_ar' => 'إنشاء فئة الحدث',
    'title_fr' => 'Créer une classe d\'événement',
    'description_en' => 'Generate an event class for broadcasting chat messages.',
    'description_ar' => 'قم بإنشاء فئة حدث لبث رسائل الدردشة.',
    'description_fr' => 'Générez une classe d\'événement pour diffuser les messages de chat.',
    'code' => 'php artisan make:event MessageSent',
    'language' => 'bash',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 6,
]);
Instruction::create([
    'title_en' => 'Broadcast the Event',
    'title_ar' => 'بث الحدث',
    'title_fr' => 'Diffuser l\'événement',
    'description_en' => 'Broadcast the chat message event to all connected users.',
    'description_ar' => 'قم ببث حدث رسالة الدردشة إلى جميع المستخدمين المتصلين.',
    'description_fr' => 'Diffusez l\'événement de message de chat à tous les utilisateurs connectés.',
    'code' => 'public function broadcastOn()\n{\n    return new Channel("chat");\n}',
    'language' => 'php',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 6,
]);
Instruction::create([
    'title_en' => 'Frontend Integration',
    'title_ar' => 'تكامل الجهة الأمامية',
    'title_fr' => 'Intégration du frontend',
    'description_en' => 'Listen for incoming chat messages and update the UI dynamically.',
    'description_ar' => 'استمع إلى الرسائل الواردة لتحديث واجهة المستخدم ديناميكيًا.',
    'description_fr' => 'Écoutez les messages de chat entrants et mettez à jour l\'interface utilisateur dynamiquement.',
    'code' => 'Pusher.pusher.subscribe("chat").bind("message-sent", function(data) {\n    console.log(data.message);\n});',
    'language' => 'javascript',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 6,
]);
// Trick 7: Building an E-commerce Website with Laravel and React
Instruction::create([
    'title_en' => 'Set Up Laravel Backend',
    'title_ar' => 'إعداد الخلفية بلارافيل',
    'title_fr' => 'Configurer l\'API Laravel',
    'description_en' => 'Create a Laravel project to handle product data and user authentication.',
    'description_ar' => 'قم بإنشاء مشروع لارافيل لإدارة بيانات المنتجات وتسجيل الدخول للمستخدمين.',
    'description_fr' => 'Créez un projet Laravel pour gérer les données المنتجات et l\'authentification des utilisateurs.',
    'code' => 'composer create-project --prefer-dist laravel/laravel:^9.0 e-commerce',
    'language' => 'bash',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 7,
]);
Instruction::create([
    'title_en' => 'Generate Product Model and Migration',
    'title_ar' => 'إنشاء نموذج ومigration للمنتج',
    'title_fr' => 'Générer un modèle et une migration pour le produit',
    'description_en' => 'Create a model and migration for the products table.',
    'description_ar' => 'قم بإنشاء نموذج ومigration لجدول المنتجات.',
    'description_fr' => 'Créez un modèle et une migration pour le tableau des produits.',
    'code' => 'php artisan make:model Product -m',
    'language' => 'bash',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 7,
]);
Instruction::create([
    'title_en' => 'Define Migration Fields',
    'title_ar' => 'تحديد حقول الهجرة',
    'title_fr' => 'Définir les champs de migration',
    'description_en' => 'Add fields like name, price, description, and image_url to the products table.',
    'description_ar' => 'أضف حقولًا مثل الاسم، السعر، الوصف، والصورة إلى جدول المنتجات.',
    'description_fr' => 'Ajoutez des champs comme le nom, le prix, la description et l\'URL de l\'image au tableau des produits.',
    'code' => '$table->id();\n$table->string("name");\n$table->decimal("price", 8, 2);\n$table->text("description")->nullable();\n$table->string("image_url")->nullable();\n$table->timestamps();',
    'language' => 'php',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 7,
]);
Instruction::create([
    'title_en' => 'Run Migrations',
    'title_ar' => 'تشغيل الهجرات',
    'title_fr' => 'Exécuter les migrations',
    'description_en' => 'Apply the migrations to create the products table in the database.',
    'description_ar' => 'قم بتطبيق الهجرات لإنشاء جدول المنتجات في قاعدة البيانات.',
    'description_fr' => 'Appliquez les migrations pour créer le tableau des produits dans la base de données.',
    'code' => 'php artisan migrate',
    'language' => 'bash',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 7,
]);
Instruction::create([
    'title_en' => 'Set Up React Frontend',
    'title_ar' => 'إعداد الجهة الأمامية برياكت',
    'title_fr' => 'Configurer le frontend React',
    'description_en' => 'Create a React app and install necessary dependencies.',
    'description_ar' => 'قم بإنشاء تطبيق React وتثبيت التبعيات اللازمة.',
    'description_fr' => 'Créez une application React et installez les dépendances nécessaires.',
    'code' => 'npx create-react-app e-commerce-frontend\nnpm install axios react-router-dom',
    'language' => 'bash',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 7,
]);
Instruction::create([
    'title_en' => 'Build Product Listing Page',
    'title_ar' => 'إنشاء صفحة قائمة المنتجات',
    'title_fr' => 'Créer une page de liste des produits',
    'description_en' => 'Fetch product data from the Laravel API and display it in a grid layout.',
    'description_ar' => 'استرداد بيانات المنتج من API Laravel وإظهارها في تخطيط شبكة.',
    'description_fr' => 'Récupérez les données du produit depuis l\'API Laravel et affichez-les dans un format grille.',
    'code' => 'import React, { useEffect, useState } from "react";\nimport axios from "axios";\n\nfunction ProductList() {\n    const [products, setProducts] = useState([]);\n\n    useEffect(() => {\n        axios.get("/api/products").then((response) => setProducts(response.data));\n    }, []);\n\n    return (\n        <div>\n            {products.map((product) => (\n                <div key={product.id}>\n                    <h3>{product.name}</h3>\n                    <p>{product.price}</p>\n                    <img src={product.image_url} alt={product.name} />\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default ProductList;',
    'language' => 'javascript',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 7,
]);
// Trick 8: Responsive Blog Website with HTML5, CSS3, and JavaScript
Instruction::create([
    'title_en' => 'Set Up Project Structure',
    'title_ar' => 'إعداد هيكل المشروع',
    'title_fr' => 'Configurer la structure du projet',
    'description_en' => 'Create a folder named "Blog" and add index.html, style.css, and script.js files.',
    'description_ar' => 'قم بإنشاء مجلد باسم "Blog" وإضافة ملفات index.html، style.css، وscript.js.',
    'description_fr' => 'Créez un dossier nommé "Blog" et ajoutez les fichiers index.html, style.css et script.js.',
    'code' => '',
    'language' => 'plaintext',
    'premium' => false,
    'user_id' => 1,
    'trick_id' => 8,
]);
Instruction::create([
    'title_en' => 'HTML Structure',
    'title_ar' => 'تركيبة HTML',
    'title_fr' => 'structure HTML',
    'description_en' => 'Create the basic structure of the blog website.',
    'description_ar' => 'إنشاء الهيكل الأساسي لموقع المدونة.',
    'description_fr' => 'Créer la structure de base du site de blog.',
    'code' => '<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>My Blog</title>\n    <link rel="stylesheet" href="style.css">\n</head>\n<body>\n    <header>\n        <h1>My Blog</h1>\n    </header>\n    <main>\n        <article>\n            <h2>First Post</h2>\n            <p>This is my first blog post.</p>\n        </article>\n    </main>\n    <footer>\n        <p>&copy; 2023 My Blog</p>\n    </footer>\n    <script src="script.js"></script>\n</body>\n</html>',
    'language' => 'html',
    'premium' => false,
    'user_id' => 1,
    'trick_id' => 8,
]);
Instruction::create([
    'title_en' => 'CSS Styling',
    'title_ar' => 'واجهة CSS',
    'title_fr' => 'styles CSS',
    'description_en' => 'Style the blog website with a clean and modern design.',
    'description_ar' => 'تصميم موقع المدونة بنمط نظيف ومعاصر.',
    'description_fr' => 'Styler le site de blog avec un design propre et moderne.',
    'code' => 'body {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: #f4f4f4;\n}\nheader {\n    background: #007bff;\n    color: white;\n    text-align: center;\n    padding: 20px;\n}\nmain {\n    max-width: 800px;\n    margin: 20px auto;\n    padding: 20px;\n    background: white;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\nfooter {\n    text-align: center;\n    padding: 10px;\n    background: #007bff;\n    color: white;\n}',
    'language' => 'css',
    'premium' => false,
    'user_id' => 1,
    'trick_id' => 8,
]);
Instruction::create([
    'title_en' => 'JavaScript Interactivity',
    'title_ar' => 'تفاعل جافاسكريبت',
    'title_fr' => 'Interactivité JavaScript',
    'description_en' => 'Add interactive features like dark mode toggle.',
    'description_ar' => 'أضف ميزات تفاعلية مثل تشغيل/إيقاف الوضع المظلم.',
    'description_fr' => 'Ajoutez des fonctionnalités interactives comme le basculement du mode sombre.',
    'code' => 'document.addEventListener("DOMContentLoaded", () => {\n    const toggleButton = document.createElement("button");\n    toggleButton.textContent = "Toggle Dark Mode";\n    document.body.appendChild(toggleButton);\n\n    toggleButton.addEventListener("click", () => {\n        document.body.classList.toggle("dark-mode");\n    });\n});',
    'language' => 'javascript',
    'premium' => false,
    'user_id' => 1,
    'trick_id' => 8,
]);
Instruction::create([
    'title_en' => 'Responsive Design',
    'title_ar' => 'تصميم متجاوب',
    'title_fr' => 'Design responsive',
    'description_en' => 'Make the blog website responsive for mobile devices.',
    'description_ar' => 'اجعل موقع المدونة متجاوبًا للأجهزة المحمولة.',
    'description_fr' => 'Rendez le site de blog responsive pour les appareils mobiles.',
    'code' => '@media (max-width: 600px) {\n    header h1 {\n        font-size: 1.5rem;\n    }\n    main {\n        padding: 10px;\n    }\n}',
    'language' => 'css',
    'premium' => false,
    'user_id' => 1,
    'trick_id' => 8,
]);
// Trick 9: Creating a Portfolio Website with TailwindCSS and React
Instruction::create([
    'title_en' => 'Set Up React App',
    'title_ar' => 'إعداد تطبيق React',
    'title_fr' => 'Configurer une application React',
    'description_en' => 'Create a new React app and install TailwindCSS.',
    'description_ar' => 'قم بإنشاء تطبيق React جديد وتثبيت TailwindCSS.',
    'description_fr' => 'Créez une nouvelle application React et installez TailwindCSS.',
    'code' => 'npx create-react-app portfolio\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init',
    'language' => 'bash',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 9,
]);
Instruction::create([
    'title_en' => 'Configure TailwindCSS',
    'title_ar' => 'إعداد TailwindCSS',
    'title_fr' => 'Configurer TailwindCSS',
    'description_en' => 'Set up TailwindCSS by modifying the configuration file.',
    'description_ar' => 'قم بإعداد TailwindCSS عن طريق تعديل ملف التكوين.',
    'description_fr' => 'Configurez TailwindCSS en modifiant le fichier de configuration.',
    'code' => 'module.exports = {\n    content: [\n        "./src/**/*.{js,jsx,ts,tsx}",\n    ],\n    theme: {\n        extend: {},\n    },\n    plugins: [],\n};',
    'language' => 'javascript',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 9,
]);
Instruction::create([
    'title_en' => 'Build Home Page',
    'title_ar' => 'إنشاء الصفحة الرئيسية',
    'title_fr' => 'Créer la page d\'accueil',
    'description_en' => 'Design the home page using TailwindCSS classes.',
    'description_ar' => 'تصميم الصفحة الرئيسية باستخدام فئات TailwindCSS.',
    'description_fr' => 'Concevez la page d\'accueil à l\'aide des classes TailwindCSS.',
    'code' => 'import React from "react";\n\nfunction HomePage() {\n    return (\n        <div className="min-h-screen bg-gray-100 flex flex-col justify-center items-center">\n            <h1 className="text-4xl font-bold text-blue-600">My Portfolio</h1>\n            <p className="text-lg text-gray-600 mt-4">Welcome to my portfolio website!</p>\n        </div>\n    );\n}\n\nexport default HomePage;',
    'language' => 'javascript',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 9,
]);
Instruction::create([
    'title_en' => 'Add Projects Section',
    'title_ar' => 'إضافة قسم المشاريع',
    'title_fr' => 'Ajouter une section projets',
    'description_en' => 'Display a list of your projects with images and descriptions.',
    'description_ar' => 'عرض قائمة بمشاريعك مع الصور والوصف.',
    'description_fr' => 'Affichez une liste de vos projets avec des images et des descriptions.',
    'code' => 'function ProjectsSection() {\n    const projects = [\n        { title: "Project 1", description: "Description of project 1", image: "project1.jpg" },\n        { title: "Project 2", description: "Description of project 2", image: "project2.jpg" },\n    ];\n\n    return (\n        <div className="container mx-auto py-10">\n            <h2 className="text-3xl font-bold mb-6">My Projects</h2>\n            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">\n                {projects.map((project) => (\n                    <div key={project.title} className="bg-white shadow-md rounded-lg p-6">\n                        <img src={project.image} alt={project.title} className="w-full rounded-md mb-4" />\n                        <h3 className="text-xl font-semibold">{project.title}</h3>\n                        <p>{project.description}</p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}',
    'language' => 'javascript',
    'premium' => true,
    'user_id' => 1,
    'trick_id' => 9,
]);
}
}
